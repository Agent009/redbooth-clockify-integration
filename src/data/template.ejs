<script src="https://cdn.tailwindcss.com"></script>

<div id="invoice-container" class="container mx-auto p-4">
    <div class="flex justify-between">
        <div>
            <h1 class="text-3xl font-bold mb-4">
                <%= data.name %>
            </h1>
            <hr class="border-double border-2 border-black mb-4" />
            <div class="mb-4">
                <p class="font-bold py-2">Bill To:</p>
                <span class="text-md">
                    Connextar Technologies Ltd
                    <br />
                    39 Seldon Street, Bradford,
                    <br />
                    BD5 9HH
                </span>
            </div>
        </div>
        <div class='text-right flex flex-col justify-end mb-[16px]'>
            <p class="font-semibold py-0 text-left">Invoice Number: # <%=data.invoiceNo%>
            </p>
            <p class="font-semibold py-1 text-left">Issue Date: <%=data.invoiceDate%>
            </p>
            <p class="font-semibold py-0 text-left">Due Date: <%=data.invoiceDueDate%>
            </p>
        </div>
    </div>


    <table class="N01 w-full mt-8">
        <thead>
            <tr>
                <th class="border px-4 py-2 bg-slate-50">Project</th>
                <th class="border px-4 py-2 bg-slate-50 pl-2.5 pr-2.5">Period</th>
                <th class="border px-4 py-2 bg-slate-50">Rate</th>
                <th class="border px-4 py-2 bg-slate-50">Hours</th>
                <th class="border px-4 py-2 bg-slate-50">Charges</th>
            </tr>
        </thead>
        <tbody>
            <% for (const project of data.loggingsData) { %>
                <% for (const weeklyLogging of project.projectLoggingsData) { %>

                    <tr key={index}>
                        <td class="border px-8 py-2 text-center">
                            <%= project.name %>
                        </td>
                        <td class="border px-6 py-2 text-center pl-2.5 pr-2.5">
                            <%= weeklyLogging.range %>
                        </td>
                        <td class="border px-8 py-2 text-center">
                            <%= data.currency%>
                                <%= parseFloat(data.hourlyRate).toFixed(2) %>
                        </td>
                        <td class="border px-8 py-2 text-center">
                            <%= parseFloat(weeklyLogging.weeklyTotalLoggedHours).toFixed(2) %>
                        </td>
                        <td class="border px-8 py-2 text-center">
                            <%= data.currency %>
                                <%= parseFloat(weeklyLogging.weeklyTotals).toFixed(2) %>
                        </td>
                    </tr>
                    <% } %>
                        <% } %>

                            <% if (data.invoiceItems && data.invoiceItems.length) { %>
                                <% for (const item of data.invoiceItems) { %>
                                    <tr class="border-b border-gray-400">
                                        <td class="border px-8 py-2 text-center">
                                            <%= item.project %>
                                        </td>
                                        <td class="border px-6 py-2 text-center pl-2.5 pr-2.5"></td>
                                        <td class="border px-8 py-2 text-center">
                                            <%= item.rate %>
                                        </td>
                                        <td class="border px-8 py-2 text-center"></td>
                                    </tr>
                                    <% } %>
                                        <% } %>
        </tbody>



    </table>
    <% function formatNumber(number) { if (number>= 1000) {
        return number.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',');
        } else {
        return number.toString();
        }
        }%>

        <% const calculateSubtotal=(rate, hours)=> {
            if (rate && hours) {
            return (rate * hours).toFixed(2);
            } else if (rate) {
            return parseFloat(rate).toFixed(2);
            }
            return 0;
            } %>

            <div class="flex justify-end mt-2">
                <table>
                    <tbody>
                        <tr>
                            <td class="pr-2 font-bold">Balance Due:</td>
                            <td class="font-bold">
                                <%= data.currency %>
                                    <%- formatNumber((data.monthlyTotals + data.invoiceItems.reduce((total, item)=> {
                                        const subtotal = parseFloat(calculateSubtotal(item.rate, item.hours));
                                        return subtotal ? total + subtotal : total;
                                        }, 0)).toFixed(2)) %>


                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>

</div>